"""Add extended material fields for services and regulatory tracking

Revision ID: 0002
Revises: 0001
Create Date: 2024-01-15 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0002'
down_revision = '0001'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Dodaj enum tipove
    item_type_enum = postgresql.ENUM('materijal', 'usluga', name='itemtype')
    item_type_enum.create(op.get_bind())
    
    category_enum = postgresql.ENUM(
        'adaptogen', 'nootropik', 'vitamin', 'mineral', 'fosfolipid', 
        'aroma', 'pomoćna_tvar', 'proizvodnja', 'pakiranje', 'prijevoz', 
        'skladištenje', 'marketing', 'ostalo', name='category'
    )
    category_enum.create(op.get_bind())
    
    form_enum = postgresql.ENUM(
        'prašak', 'kapsula', 'ulje', 'ekstrakt', 'liposom', 
        'mikroenkapsula', 'tableta', 'tekućina', 'ostalo', name='form'
    )
    form_enum.create(op.get_bind())
    
    regulatory_status_enum = postgresql.ENUM(
        'novel_food', 'dodatak_prehrani', 'školska_zabrana', 
        'odobreno', 'na_čekanju', 'nije_primjenjivo', name='regulatorystatus'
    )
    regulatory_status_enum.create(op.get_bind())
    
    # Dodaj nove kolone u materials tablicu
    op.add_column('materials', sa.Column('item_type', sa.Enum('materijal', 'usluga', name='itemtype'), nullable=False, server_default='materijal'))
    op.add_column('materials', sa.Column('material_component', sa.String(), nullable=True))
    op.add_column('materials', sa.Column('service_description', sa.Text(), nullable=True))
    op.add_column('materials', sa.Column('category', sa.Enum('adaptogen', 'nootropik', 'vitamin', 'mineral', 'fosfolipid', 'aroma', 'pomoćna_tvar', 'proizvodnja', 'pakiranje', 'prijevoz', 'skladištenje', 'marketing', 'ostalo', name='category'), nullable=False, server_default='ostalo'))
    op.add_column('materials', sa.Column('form', sa.Enum('prašak', 'kapsula', 'ulje', 'ekstrakt', 'liposom', 'mikroenkapsula', 'tableta', 'tekućina', 'ostalo', name='form'), nullable=True))
    op.add_column('materials', sa.Column('standardization', sa.String(), nullable=True))
    op.add_column('materials', sa.Column('dose_per_unit', sa.Float(), nullable=True))
    op.add_column('materials', sa.Column('dose_unit', sa.String(), nullable=True))
    op.add_column('materials', sa.Column('total_consumption', sa.Float(), nullable=True))
    op.add_column('materials', sa.Column('consumption_unit', sa.String(), nullable=True))
    op.add_column('materials', sa.Column('vendor_id', sa.Integer(), nullable=True))
    op.add_column('materials', sa.Column('has_coa', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('materials', sa.Column('coa_date', sa.Date(), nullable=True))
    op.add_column('materials', sa.Column('batch_number', sa.String(), nullable=True))
    op.add_column('materials', sa.Column('delivery_time_days', sa.Integer(), nullable=True))
    op.add_column('materials', sa.Column('minimum_order_quantity', sa.Float(), nullable=True))
    op.add_column('materials', sa.Column('moq_unit', sa.String(), nullable=True))
    op.add_column('materials', sa.Column('regulatory_status', sa.Enum('novel_food', 'dodatak_prehrani', 'školska_zabrana', 'odobreno', 'na_čekanju', 'nije_primjenjivo', name='regulatorystatus'), nullable=False, server_default='nije_primjenjivo'))
    op.add_column('materials', sa.Column('storage_conditions', sa.Text(), nullable=True))
    op.add_column('materials', sa.Column('expiry_date', sa.Date(), nullable=True))
    op.add_column('materials', sa.Column('analytical_method', sa.String(), nullable=True))
    op.add_column('materials', sa.Column('formulation_purpose', sa.Text(), nullable=True))
    op.add_column('materials', sa.Column('contract_terms', sa.Text(), nullable=True))
    op.add_column('materials', sa.Column('notes', sa.Text(), nullable=True))
    
    # Dodaj indekse
    op.create_index('idx_material_type', 'materials', ['item_type'])
    op.create_index('idx_material_vendor', 'materials', ['vendor_id'])
    op.create_index('idx_material_coa', 'materials', ['has_coa'])
    op.create_index('idx_material_regulatory', 'materials', ['regulatory_status'])
    
    # Dodaj foreign key constraint
    op.create_foreign_key('fk_material_vendor', 'materials', 'vendors', ['vendor_id'], ['id'])
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Ukloni foreign key constraint
    op.drop_constraint('fk_material_vendor', 'materials', type_='foreignkey')
    
    # Ukloni indekse
    op.drop_index('idx_material_regulatory', table_name='materials')
    op.drop_index('idx_material_coa', table_name='materials')
    op.drop_index('idx_material_vendor', table_name='materials')
    op.drop_index('idx_material_type', table_name='materials')
    
    # Ukloni kolone
    op.drop_column('materials', 'notes')
    op.drop_column('materials', 'contract_terms')
    op.drop_column('materials', 'formulation_purpose')
    op.drop_column('materials', 'analytical_method')
    op.drop_column('materials', 'expiry_date')
    op.drop_column('materials', 'storage_conditions')
    op.drop_column('materials', 'regulatory_status')
    op.drop_column('materials', 'moq_unit')
    op.drop_column('materials', 'minimum_order_quantity')
    op.drop_column('materials', 'delivery_time_days')
    op.drop_column('materials', 'batch_number')
    op.drop_column('materials', 'coa_date')
    op.drop_column('materials', 'has_coa')
    op.drop_column('materials', 'vendor_id')
    op.drop_column('materials', 'consumption_unit')
    op.drop_column('materials', 'total_consumption')
    op.drop_column('materials', 'dose_unit')
    op.drop_column('materials', 'dose_per_unit')
    op.drop_column('materials', 'standardization')
    op.drop_column('materials', 'form')
    op.drop_column('materials', 'category')
    op.drop_column('materials', 'service_description')
    op.drop_column('materials', 'material_component')
    op.drop_column('materials', 'item_type')
    
    # Ukloni enum tipove
    op.execute('DROP TYPE regulatorystatus')
    op.execute('DROP TYPE form')
    op.execute('DROP TYPE category')
    op.execute('DROP TYPE itemtype')
    
    # ### end Alembic commands ### 